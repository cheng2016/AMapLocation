apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.greenrobot.greendao'

greendao {
    //数据库的schema版本，也可以理解为数据库版本号
    schemaVersion 6
    //设置DaoMaster、DaoSession、Dao包名，也就是要放置这些类的包的全路径。
    daoPackage 'com.wecare.app.data.source.local.greendao'
    //设置DaoMaster、DaoSession、Dao目录
    targetGenDir 'src/main/java'
}

def getTime() {
    return new java.text.SimpleDateFormat("yyyyMMddHHmm").format(new Date());
//    return new java.text.SimpleDateFormat("yyyyMMdd").format(new Date());
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.wecare.app"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 13
        versionName "2.0.${getTime()}"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }

    signingConfigs {
        signing {
            keyAlias 'wecare'
            keyPassword '123456'
            storeFile file('wecare.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
//            minifyEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signing

//            applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile.name.contains("release") && outputFile != null && outputFile.name.endsWith('.apk')) {
//                        def fileName = "WecareLocation_v${versionName}.apk"
//                        outputFileName = new File("../release/", fileName)
//                    }
//                }
//            }
        }
        debug {
            signingConfig signingConfigs.signing
//            signingConfig signingConfigs.signing
        }
    }

/*    productFlavors {
        kuda { // 签名
            signingConfig signingConfigs.signing
        }
    }*/

    sourceSets {
        main {
            proto {
                //main目录新建proto目录
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDir 'src/main/java'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.+'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //支持Gson 及 rxjava
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //rxjava rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.13'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    //protobuff库
    implementation 'com.google.protobuf:protobuf-java:3.5.0+'
    implementation 'com.google.protobuf:protoc:3.5.0+'

    //图片加载库
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'

    //数据库类库
    implementation 'org.greenrobot:greendao:3.2.2+'
    implementation 'org.greenrobot:greendao-generator:3.2.2+'
//    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.0.3+'

    implementation 'io.netty:netty-all:4.1.25.Final'

//    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //工具库utils
//    implementation 'com.blankj:utilcode:1.7.1'

    implementation 'com.yanzhenjie.andserver:api:2.0.1'
    annotationProcessor 'com.yanzhenjie.andserver:processor:2.0.1'
}

//构建task
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.0+'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
                // Add cpp output without any option.
                // DO NOT omit the braces if you want this builtin to be added.
                cpp {}
            }
        }
    }
    //生成目录
    generatedFilesBaseDir = "$projectDir/src/generated"
}
